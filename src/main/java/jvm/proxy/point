反射机制的定义：
    是在运行状态中，对于任意的一个类，都能够知道这个类的所有属性和方法，对任意一个对象都能够通过反射机制调用一个类的任意方法，
    这种动态获取类信息及动态调用类对象方法的功能称为java的反射机制。

反射的作用：
    1、动态地创建类的实例，将类绑定到现有的对象中，或从现有的对象中获取类型。
    2、应用程序需要在运行时从某个特定的程序集中载入一个特定的类

反射 一般使用 Class.forName()方法;
动态代理就是实现 InvocationHandler 接口；

代理模式
    是为了提供额外或不同的操作，而插入的用来替代”实际”对象的对象，这些操作涉及到与”实际”对象的通信，因此代理通常充当中间人角色。
    Java的动态代理比代理的思想更前进了一步，它可以动态地创建并代理并动态地处理对所代理方法的调用。
    在动态代理上所做的所有调用都会被重定向到单一的调用处理器上，它的工作是揭示调用的类型并确定相应的策略。

学习Spring的时候，我们知道Spring主要有两大思想，一个是IoC，另一个就是AOP
    对于IoC，它利用的是反射机制，依赖注入就不用多说了，
    对于Spring的核心AOP来说，使用了动态代理，其实底层也是反射。