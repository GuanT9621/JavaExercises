package leetcode;

/**
 * https://leetcode-cn.com/problems/the-number-of-good-subsets/
 * 好子集的数目
 * 给你一个整数数组 nums 。如果 nums 的一个子集中，所有元素的乘积可以表示为一个或多个互不相同的质数的乘积，那么我们称它为好子集 。
 * 比方说，如果 nums = [1, 2, 3, 4] ：
 * [2, 3] ，[1, 2, 3] 和 [1, 3] 是 好子集，乘积分别为 6 = 2*3 ，6 = 1*2*3 和 3 = 1*3 。
 * [1, 4] 和 [4] 不是 好子集，因为乘积分别为 4 = 2*2 和 4 = 2*2 。
 * 请你返回 nums 中不同的好子集的数目对 10^9 + 7 取余的结果。
 * nums 中的子集是通过删除 nums 中一些（可能一个都不删除，也可能全部都删除）元素后剩余元素组成的数组。如果两个子集删除的下标不同，那么它们被视为不同的子集。
 * 条件 1 <= nums.length <= 105   1 <= nums[i] <= 30
 *
 * 思路
 * 1 创建出所有的子集
 * 2 判断该子集是否为好子集
 *      2-1 由于数组内数字为1到30，那么其实
 *          1：对于任意一个好子集而言，我们添加任意数目的 1，得到的新子集仍然是好子集；
 *          2,3,5,6,7,10,11,13,14,15,17,19,21,22,23,26,29,30：这些数均不包含平方因子，因此每个数在好子集中至多出现一次；
 *          4,8,9,12,16,18,20,24,25,27,28：这些数包含平方因子，因此一定不能在好子集中出现。
 */
public class N1994_h {

    public int numberOfGoodSubsets(int[] nums) {

    }

}
